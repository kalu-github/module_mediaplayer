apply plugin: 'com.android.library'

android {

    compileOptions.encoding = "UTF-8"
    namespace 'lib.kalu.mediaxplayer'
    compileSdk 35

    defaultConfig {
        minSdk = 14
        targetSdk = 33

        //添加此行
        flavorDimensions "default"
    }

    libraryVariants.all { variant ->
        variant.outputs.all {
            def type = new String(buildType.name).toLowerCase()
            def time = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08"))
            outputFileName = "lib_mediaplayer_media3_r1.6.0_mini_" + type + "_" + time + ".aar"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            consumerProguardFiles 'consumer-rules.pro'
            proguardFiles 'proguard-rules.pro', 'consumer-rules.pro'
        }
        debug {
            minifyEnabled false
            consumerProguardFiles 'consumer-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compileOnly('androidx.appcompat:appcompat:1.6.1')
    compileOnly('androidx.exifinterface:exifinterface:1.3.6')
    compileOnly('com.squareup.okhttp3:okhttp:3.14.9')
    compileOnly("androidx.annotation:annotation:1.9.1")

    compileOnly files('libs/checker-qual-android-3.45.0.jar')
    compileOnly files('libs/jsr305-3.0.2.jar')
    compileOnly files('libs/j2objc-annotations-3.0.0.jar')


    //compileOnly files('libs/mockwebserver-4.12.0.jar')
//    testImplementation 'com.squareup.okhttp3:mockwebserver:' + okhttpVersion

    // guava
    api files('libs/guava-33.2.1-android.jar')
    api files('libs/guava-failureaccess-1.0.2.jar')
    compileOnly files('libs/guava-error_prone_annotations-2.28.0.jar')
}